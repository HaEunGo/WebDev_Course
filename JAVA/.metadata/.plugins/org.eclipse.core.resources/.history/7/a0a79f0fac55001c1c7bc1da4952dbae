package com.kh.stream.basic;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

import com.kh.stream.model.vo.Student;

public class A_Create {
	/*
	 * 스트림의 종류
	 * 	- java.util.stream 패키지에 존재하고 BaseStream 인터페이스를 부모로 해서
	 * 	  자식 인터페이스들이 상속 관계를 이루고 있다.
	 * 	- Stream, IntStream, LongStream, DoubleStream
	 * 
	 * 스트림의 생성
	 * 	- 컬렉션으로부터 스트림 얻기
	 * 		- 컬렉션 stream() 메소드로부터 얻어올 수 있다.(java.util.Collection.stream())
	 * 	- 배열로부터 스트림 얻기
	 * 		- Arrays.stream(배열) 메소드로부터 얻어오거나 각 스트림(Stream, IntStream, ...)
	 * 		  of() 메소드를 통해서 얻어올 수 있다.
	 * 	- 숫자 범위로 스트림 얻기
	 * 		- IntStream의 range(), rangeClosed() 메소드를 이용해서
	 * 		  첫 번째 매개 값부터 두 번째 매개 값까지 혹은 이전까지 제공하는 스트림을 얻어올 수 있다.
	 */
	
	// 컬렉션으로부터 스트림 얻기
	public void method1() {
		List<Student> list = Arrays.asList(
				new Student("봉봉이", 20, "여자", 86, 97),
				new Student("땅땅이", 20, "여자", 45, 68),
				new Student("쑥쑥이", 20, "남자", 100, 100)
		);
	
//		for 구문 사용
		for (Student student : list) {
			System.out.println(student);
		}
		
		System.out.println();
		
//		Stream 사용
//		Stream<Student> stream = list.stream();
//		stream.forEach(s -> System.out.println(s));
		
//		s -> System.out.println(s) : 메소드 처럼 보이지만 결과적으로는 인터페이스의 익명 구현 객체로 넘어간다.
//		list.stream().forEach(System.out::println);	// 메소드 참조
		list.stream().forEach(s -> System.out.println(s));
		
	}
	
	// 배열로부터 스트림 얻기
	public void method2() {
		String[] names = {"제임스", "데릭", "다니엘"};
		
//		Stream<String> stream = Arrays.stream(names);
		
		Stream<String> stream = Stream.of(names);
		
		stream.forEach(str -> System.out.println(str));
	}

	
}
